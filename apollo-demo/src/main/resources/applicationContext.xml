<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:apollo="http://www.ctrip.com/schema/apollo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.ctrip.com/schema/apollo http://www.ctrip.com/schema/apollo.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 启动Apollo 使用默认配置不需要写namespace，若使用公共namespace则需要写-->
    <apollo:config />

    <!--启用注解扫描-->
    <!--<context:annotation-config/>-->
    <context:component-scan base-package="com.example.bean" />

    <!-- 模拟实际应用，使用连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.user}" />
        <property name="password" value="${jdbc.password}" />

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${initialSize:1}" />
        <property name="maxActive" value="${maxActive:2}" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${maxWait : 60000}" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis : 60000}" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis : 300000}" />

        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 是否打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="false" />
        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat" />
    </bean>

    <!-- 配置业务Bean -->
    <bean id="user" class="com.example.bean.User">
        <property name="userName" value="${userName}" />
        <property name="age" value="${age}" />
        <property name="address" value="${address}" />
    </bean>

    <bean id="userService" class="com.example.service.UserService">
        <property name="user" ref="user" />
        <property name="dataSource" ref="dataSource" />
    </bean>


</beans>